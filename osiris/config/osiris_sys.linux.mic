##########################################################################################
# System specific configuration for OSIRIS
#   System:    Linux / Intel MPI / MIC
#   Compilers: Intel family ( icc, ifort ) 
##########################################################################################

##########################################################################################
# OSIRIS configuration

# Set a different binary extension (we're cross compiling)
BIN_EXT = mic

# Set the following to a system optimized timer, or leave commented to use a default one
TIMER = __POSIX_TIMER__

# SIMD
# The following line enables explicit Intel KNC vectorization
SIMD = MIC

# Numeric precision (only single precision is currently supported)
PRECISION = SINGLE

##########################################################################################
# Compilers

F90 = mpiifort -mmic
F03 = mpiifort -mmic -stand f03 -free
cc  = mpiicc -mmic -restrict -ansi-alias

F90FLAGS_all = -fpp -diag-disable 5117 -align array64byte 

# Fortran preprocessor
FPP = gcc -C -E -x assembler-with-cpp -D__MIC__

# This flag supresses some hyper-vigilant compilier warnings that have been deemed harmless. The list of warnings
# can be found is ./source/config.mk.warnings. If you are having some strange issues that you need to debug
# comment out DISABLE_PARANOIA and/or read the ./source/config.warnings file to allow the warnings if you think
# they may help you find the issue.
DISABLE_PARANOIA = YES

##########################################################################################
# Fortran flags

# External name mangling
UNDERSCORE = FORTRANSINGLEUNDERSCORE

# Flag to enable compilation of .f03 files (so far only intel compiler requires this)
F03_EXTENSION_FLAG = -free -Tf

# Enable OpenMP code
FPP += -D_OPENMP
F90FLAGS_all += -qopenmp

# ------------------------------- Compilation Targets ------------------------------------

# Debug

# -fpe-all:0

F90FLAGS_debug      = $(F90FLAGS_all) -O0 -debug all -traceback -check all,noarg_temp_created \
                      -warn all -ftrapuv 

# Production
F90FLAGS_production = $(F90FLAGS_all) -fast

# Profile with VTune
F90FLAGS_profile    = $(F90FLAGS_all) -O3 -no-prec-div -debug inline-debug-info 

##########################################################################################
# C flags

# -wd,981,1418,2259 \
#debug
CFLAGS_debug = -O0 -g -debug full -traceback -fp-trap-all=common -Wall -w3 -wd,981,1418,2259\
               -pedantic -std=c99 

# profile
CFLAGS_profile = -O3 -no-prec-div -debug inline-debug-info -ansi-alias -Wno-uninitialized

# production
# CFLAGS_production = -fast
CFLAGS_production = -ipo -O3 -no-prec-div -ansi-alias  -Wno-uninitialized 

##########################################################################################
# Linker flags

# None required
#LDFLAGS =

##########################################################################################
# Libraries

# MPI
# MPI is supported through wrapper compilers, no flags required

# MPI supports MPI_IN_PLACE reduction
FPP += -D__HAS_MPI_IN_PLACE__

# HDF5

H5_ROOT = /opt/hdf5/1.8.11-mic/

H5_FCOMPILEFLAGS = -I$(H5_ROOT)/include 
H5_FLINKFLAGS    = -L$(H5_ROOT)/lib \
                   -lhdf5hl_fortran -lhdf5_hl -lhdf5_fortran -lhdf5 \
                   -lm -Wl,-rpath -Wl,/opt/intel/composerxe/lib/mic/

# Uncomment the following if HDF5 supports parallel MPIIO
# H5_HAVE_PARALLEL = 1
